<%@page import="kr.go.booktopia.dao.BookDao"%>
<%@page import="java.util.ArrayList"%>
<%@page import="kr.go.booktopia.dao.DaoManager"%>
<%@page import="kr.go.booktopia.vo.BookGenre"%>
<%@page import="kr.go.booktopia.vo.Genre"%>
<%@page import="kr.go.booktopia.util.DateUtil"%>
<%@page import="kr.go.booktopia.dao.DaoManager"%>
<%@page import="kr.go.booktopia.vo.BookPublisher"%>
<%@page import="kr.go.booktopia.vo.BookTranslator"%>
<%@page import="kr.go.booktopia.vo.BookWriters"%>
<%@page import="java.util.Date"%>
<%@page import="kr.go.booktopia.vo.Book"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%
	request.setCharacterEncoding("utf-8");

	String[] genres = request.getParameterValues("genres");

	BookDao bookDao = new BookDao();
	
	Book book = new Book();
	int bookNo = bookDao.getBookNextVal();
	book.setId(bookNo);
	DaoManager daoManager = DaoManager.getInstance();

	String title = request.getParameter("title");
	book.setName(title);
	
	String wId = request.getParameter("writer");	
	if (wId != "") {	
		BookWriters writer = new BookWriters();		
		writer.setId(Integer.parseInt(wId));
		book.setWriter(writer);
	}
	
	String tId = request.getParameter("translator");
	if (tId != "") {
		BookTranslator translator = new BookTranslator();
		translator.setId(Integer.parseInt(tId));
		book.setTranslator(translator);	
	}
	
	String pId = request.getParameter("publisher");
	if (pId != "") {
		BookPublisher publisher = new BookPublisher();
		publisher.setId(Integer.parseInt(pId));		
		book.setPublisher(publisher);
	}	
	
	if (wId == "") {
		String newWName = request.getParameter("new-writer");
		BookWriters newWriter = new BookWriters();
		newWriter.setName(newWName);
		daoManager.create(newWriter);	
		int newWId = daoManager.getseq(BookWriters.class);
		newWriter.setId(newWId);		
		book.setWriter(newWriter);
	}
	
	if (tId == "") {
		String newTName = request.getParameter("new-translator");
		BookTranslator newTranslator = new BookTranslator();
		newTranslator.setName(newTName);
		daoManager.create(newTranslator);
		int newTId = daoManager.getseq(BookTranslator.class);
		newTranslator.setId(newTId);
		book.setTranslator(newTranslator);
	}
	
	if (pId == "") {
		String newPName = request.getParameter("new-publisher");
		BookPublisher newPublisher = new BookPublisher();
		newPublisher.setName(newPName);
		daoManager.create(newPublisher);
		int newPId = daoManager.getseq(BookPublisher.class);
		newPublisher.setId(newPId);
		book.setPublisher(newPublisher);
	}

	String publishDate = request.getParameter("publishdate");
	Date pDate = DateUtil.yyyymmdd(publishDate);
	book.setPublishDate(pDate);	
	
	String bookExplain = request.getParameter("bookexplain");
	book.setContent(bookExplain);	
	
	daoManager.create(book);

	for(String genre : genres){
		BookGenre bookGenre = new BookGenre();
		bookGenre.setBookId(bookNo);
		bookGenre.setGenreId(Integer.parseInt(genre));
		daoManager.create(bookGenre);
	}
	
	response.sendRedirect("/adminpage/book/addbooklist.jsp");
%>